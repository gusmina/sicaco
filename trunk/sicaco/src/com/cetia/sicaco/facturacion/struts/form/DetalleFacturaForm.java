/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cetia.sicaco.facturacion.struts.form;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;

import com.cetia.sicaco.hibernate.FacDfaDetalleFactura;
import com.cetia.sicaco.hibernate.FacDfaDetalleFacturaId;
import com.cetia.sicaco.hibernate.FacFenFacturaEncabezado;
import com.cetia.sicaco.hibernate.InvArtArticulo;
import com.cetia.sicaco.hibernate.InvClaClasificadoId;
import com.cetia.sicaco.hibernate.InvProProveedor;
import com.cetia.sicaco.struts.BasicForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-08-2008
 * 
 * XDoclet definition:
 * @struts.form name="detalleFacturaForm"
 */
public class DetalleFacturaForm extends BasicForm {
	/*
	 * Generated Methods
	 */

	/**
	 * 
	 */
	private static final long serialVersionUID = -5948525013111779445L;
	private double porcentajeU ;
	private double factorConversion;
	private boolean verPorc = true;
	private FacDfaDetalleFactura detalleFacturaH = new FacDfaDetalleFactura();
	private String moa = new String();
	//private String precioConvertido = new String();
	


	public boolean isVerPorc() {
		return verPorc;
	}

	public void setVerPorc(boolean verPorc) {
		this.verPorc = verPorc;
	}

	public double getFactorConversion() {
		return factorConversion;
	}

	public void setFactorConversion(double factorConversion) {
		this.factorConversion = factorConversion;
	}

	public String getMoa() {
		return moa;
	}

	public void setMoa(String moa) {
		this.moa = moa;
	}

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		// TODO Auto-generated method stub
	}

	public String getAudFechaCreacion() {
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		return (detalleFacturaH.getAudFechaCreacion()!=null)?(sdf.format(detalleFacturaH.getAudFechaCreacion())):null;
	}

	public String getAudFechaModificacion() {
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		return (detalleFacturaH.getAudUsuarioModificacion()!=null)?(sdf.format(detalleFacturaH.getAudFechaModificacion())):null;
	}

	public String getAudUsuarioCreacion() {
		return detalleFacturaH.getAudUsuarioCreacion();
	}

	public String getAudUsuarioModificacion() {
		return detalleFacturaH.getAudUsuarioModificacion();
	}

	public Integer getDfaCantidad() {
		return detalleFacturaH.getDfaCantidad();
	}

	public String getDfaDescripcion() {
		return detalleFacturaH.getDfaDescripcion();
	}

	public Byte getDfaExento() {
		return detalleFacturaH.getDfaExento();
	}

	public Double getDfaPrecioTotal() {
		return detalleFacturaH.getDfaPrecioTotal();
	}

	public Double getDfaPrecioUnitario() {
		return detalleFacturaH.getDfaPrecioUnitario();
	}

	public FacFenFacturaEncabezado getFacFenFacturaEncabezado() {
		return detalleFacturaH.getFacFenFacturaEncabezado();
	}

	public FacDfaDetalleFacturaId getId() {
		if(detalleFacturaH.getId() == null){
			detalleFacturaH.setId(new FacDfaDetalleFacturaId());
		}
		return detalleFacturaH.getId();
	}

	public Set getInvMovMovimientoses() {
		return detalleFacturaH.getInvMovMovimientoses();
	}

	public void setAudFechaCreacion(Date audFechaCreacion) {
		detalleFacturaH.setAudFechaCreacion(audFechaCreacion);
	}

	public void setAudFechaModificacion(Date audFechaModificacion) {
		detalleFacturaH.setAudFechaModificacion(audFechaModificacion);
	}

	public void setAudFechaCreacion(String adufecString) {
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		try {
			detalleFacturaH.setAudFechaCreacion(sdf.parse(adufecString));
		} catch (ParseException e) {
		}
	}
	
	public void setAudFechaModificacion(String adufecString) {
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		try {
			detalleFacturaH.setAudFechaModificacion(sdf.parse(adufecString));
		} catch (ParseException e) {
		}
	}
	
	public void setAudUsuarioCreacion(String audUsuarioCreacion) {
		detalleFacturaH.setAudUsuarioCreacion(audUsuarioCreacion);
	}

	public void setAudUsuarioModificacion(String audUsuarioModificacion) {
		detalleFacturaH.setAudUsuarioModificacion(audUsuarioModificacion);
	}

	public void setDfaCantidad(Integer dfaCantidad) {
		detalleFacturaH.setDfaCantidad(dfaCantidad);
	}

	public void setDfaDescripcion(String dfaDescripcion) {
		detalleFacturaH.setDfaDescripcion(dfaDescripcion);
	}

	public void setDfaExento(Byte dfaExento) {
		detalleFacturaH.setDfaExento(dfaExento);
	}

	public void setDfaPrecioTotal(Double dfaPrecioTotal) {
		detalleFacturaH.setDfaPrecioTotal(dfaPrecioTotal);
	}

	public void setDfaPrecioUnitario(Double dfaPrecioUnitario) {
		detalleFacturaH.setDfaPrecioUnitario(dfaPrecioUnitario);
	}

	public void setFacFenFacturaEncabezado(
			FacFenFacturaEncabezado facFenFacturaEncabezado) {
		detalleFacturaH.setFacFenFacturaEncabezado(facFenFacturaEncabezado);
	}

	public void setId(FacDfaDetalleFacturaId id) {
		if(detalleFacturaH.getId() == null){
			detalleFacturaH.setId(new FacDfaDetalleFacturaId());
		}
		detalleFacturaH.setId(id);
	}

	public void setInvMovMovimientoses(Set invMovMovimientoses) {
		detalleFacturaH.setInvMovMovimientoses(invMovMovimientoses);
	}

	public FacDfaDetalleFactura getDetalleFacturaH() {
		return detalleFacturaH;
	}

	public void setDetalleFacturaH(FacDfaDetalleFactura detalleFacturaH) {
		this.detalleFacturaH = detalleFacturaH;
	}

	public void setArtCodigo(String artCodigo){
		if(detalleFacturaH.getId() == null){
			detalleFacturaH.setId(new FacDfaDetalleFacturaId());
		}
		FacDfaDetalleFacturaId id = new FacDfaDetalleFacturaId();
		InvArtArticulo articulo = new InvArtArticulo();
		articulo.setArtCodigo(artCodigo);
		id.setInvArtArticulo(articulo);
		detalleFacturaH.setId(id);
	}
	
	public String getArtCodigo(){
		if(detalleFacturaH.getId() == null){
			detalleFacturaH.setId(new FacDfaDetalleFacturaId());
		}
		return detalleFacturaH.getId().getInvArtArticulo().getArtCodigo();
	}

	
	
	public boolean isFillAuditoria() {
		// TODO Auto-generated method stub
		return true;
	}

	public double getPorcentajeU() {
		return porcentajeU;
	}

	public void setPorcentajeU(double porcentajeU) {
		this.porcentajeU = porcentajeU;
	}
}