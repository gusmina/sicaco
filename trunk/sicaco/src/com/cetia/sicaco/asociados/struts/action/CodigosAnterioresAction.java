/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cetia.sicaco.asociados.struts.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.jmesa.facade.TableFacade;
import org.jmesa.facade.TableFacadeFactory;
import org.jmesa.limit.ExportType;
import org.jmesa.limit.Limit;
import org.jmesa.view.component.Column;
import org.jmesa.view.component.Row;
import org.jmesa.view.component.Table;
import org.jmesa.view.editor.DateCellEditor;

import com.cetia.sicaco.asociados.struts.form.CodigosAnterioresForm;
import com.cetia.sicaco.hibernate.CtaAscAsociadoDAO;
import com.cetia.sicaco.hibernate.CtaCntCodigosAnteriores;
import com.cetia.sicaco.hibernate.CtaCntCodigosAnterioresDAO;
import com.cetia.sicaco.struts.Constantes;
import com.cetia.sicaco.struts.DMLAction;

/** 
 * MyEclipse Struts
 * Creation date: 08-23-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class CodigosAnterioresAction extends DMLAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	public static final String TABLA_ID = "ctaCntCodigosAnteriores";
	public static final String ASC_ID = "ctaAscAsociado.ascId";
	
	public ActionForward lista(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CodigosAnterioresForm codigosAnterioresForm = (CodigosAnterioresForm) form;
		CtaCntCodigosAnterioresDAO codigosAnterioresDAO = new CtaCntCodigosAnterioresDAO(getSessionHibernate(request));
		CtaAscAsociadoDAO asociadoDAO = new CtaAscAsociadoDAO(getSessionHibernate(request));
		//List lst = codigosAnterioresDAO.findCodigosVencidos(ASC_ID, codigosAnterioresForm.getAscId());
		//paginacion roberto
		TableFacade tableFacade = TableFacadeFactory.createTableFacade(TABLA_ID ,request );
		tableFacade.setExportTypes(response, ExportType.CSV, ExportType.JEXCEL);
		tableFacade.setStateAttr("restore");
		Limit limit = tableFacade.getLimit();
		int totalRows = codigosAnterioresDAO.getTotalRowCountCodigosAnterioresxAsociado(codigosAnterioresForm.getAscId());
		tableFacade.setTotalRows(totalRows);
		int rowStart = limit.getRowSelect().getRowStart();
		int rowEnd = limit.getRowSelect().getRowEnd();
		List<CtaCntCodigosAnteriores> lst = codigosAnterioresDAO.findAllTransaccionXAsociado(rowStart, rowEnd, codigosAnterioresForm.getAscId());
		tableFacade.setItems(lst);
		/*
		TableFacade tableFacade = new TableFacadeImpl(TABLA_ID, request);
		tableFacade.setItems(lst);
		//---- Genera los tipos de formas con que se podran exportar los datos
		tableFacade.setExportTypes(response, ExportType.CSV, ExportType.JEXCEL);
		tableFacade.setStateAttr("restore");
		Limit limit = tableFacade.getLimit();
		*/
		if (limit.isExported()) {
        	//---- exporta la tabla
            export(tableFacade,request);
            return null; 
        } else {
        	String html = html(tableFacade, request);
            request.setAttribute(Constantes.LISTA_KEY, html);
        }
        //----- Variables de configuracion
		request.setAttribute("asociado",asociadoDAO.findById(codigosAnterioresForm.getAscId()));
		request.setAttribute(Constantes.ACCION_KEY, "/codigosAnteriores");
		return mapping.findForward("lista");
	}
	
	private String html(final TableFacade tableFacade, final HttpServletRequest request) {
		tableFacade.setColumnProperties("cntCod","cntFechaIni","cntFechaFin");
		Table table = tableFacade.getTable();
		
		//---- Titulo de la tabla
		table.setCaptionKey("tbl.cntCodigosAnteriores.caption");
		
		Row row = table.getRow();
		Column nombreColumna = row.getColumn("cntCod");
		nombreColumna.setTitleKey("tbl.cntCodigosAnteriores.codigo");

		nombreColumna = row.getColumn("cntFechaIni");
		nombreColumna.setTitleKey("tbl.cntCodigosAnteriores.fechaIni");
		nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy"));
		
		nombreColumna = row.getColumn("cntFechaFin");
		nombreColumna.setTitleKey("tbl.cntCodigosAnteriores.fechaFin");
		nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy"));
		
		return tableFacade.render();
	}
	
	//---- Funcion que genera los exports, el formato que tendran
	 private void export(final TableFacade tableFacade, final HttpServletRequest request) {
		 tableFacade.setColumnProperties("cntCod","cntFechaIni","cntFechaFin");
			Table table = tableFacade.getTable();
			
			//---- Titulo de la tabla
			table.setCaptionKey("tbl.cntCodigosAnteriores.caption");
			
			Row row = table.getRow();
			Column nombreColumna = row.getColumn("cntCod");
			nombreColumna.setTitleKey("tbl.cntCodigosAnteriores.codigo");

			nombreColumna = row.getColumn("cntFechaIni");
			nombreColumna.setTitleKey("tbl.cntCodigosAnteriores.fechaIni");
			nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy"));
			
			nombreColumna = row.getColumn("cntFechaFin");
			nombreColumna.setTitleKey("tbl.cntCodigosAnteriores.fechaFin");
			nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy"));
	}
	 
		public ActionForward regresar(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
			return mapping.findForward("toAsociados");
		}

	protected Map<String, String> getKeyMethodMap() {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("cmd.cnt.lista","lista");
		map.put("cmd.cnt.regresar","regresar");
		return map;
	}
}