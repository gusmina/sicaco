/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cetia.sicaco.struts;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.taglib.tiles.GetAttributeTag;
import org.apache.struts.validator.ValidatorForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-11-2008
 * 
 * XDoclet definition:
 * @struts.form name="basicForm"
 */
public abstract class BasicForm extends ValidatorForm {
	/*
	 * Generated Methods
	 */
	protected final static String ERRORS = 	Constantes.ERRORS;
	private UsuarioConectado usuarioConectado;
	protected final static String METHOD_NAME = "methodName";

	public UsuarioConectado getUsuarioConectado() {
		return usuarioConectado;
	}

	public void setUsuarioConectado(UsuarioConectado usuarioConectado) {
		this.usuarioConectado = usuarioConectado;
	}
	
	/**
	 * Metodo encargado de llenar los campos de auditoria de la 
	 * clase, si se debe de ingresar
	 */
	public void fillAuditoriaSave() {
		if(isFillAuditoria()) {
			Class<?> clazz = this.getClass();
			Class<?>[] parameters = new Class[]{Date.class};
			Class<?>[] parametersString = new Class[]{String.class};
			try {
				Method methodFechaCrea = clazz.getDeclaredMethod("setAudFechaCreacion", parameters);
				Method methodFechaMod = clazz.getDeclaredMethod("setAudFechaModificacion", parameters);
				Method methodUsuarioCrea = clazz.getDeclaredMethod("setAudUsuarioCreacion", parametersString);
				Method methodUsuarioMod = clazz.getDeclaredMethod("setAudUsuarioModificacion", parametersString);
				
				methodFechaCrea.invoke(this, new Date());
				methodFechaMod.invoke(this, new Date());
				methodUsuarioCrea.invoke(this, getUsuarioConectado().getNombreUsuario());
				methodUsuarioMod.invoke(this, getUsuarioConectado().getNombreUsuario());
				
			} catch (SecurityException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
	}
	
	public void fillAuditoriaUpdate(){
		if(isFillAuditoria()){
			Class<?> clazz = this.getClass();
			Class<?>[] parameters = new Class[]{Date.class};
			Class<?>[] parametersString = new Class[]{String.class};
			try {
				
				Method methodFechaMod = clazz.getDeclaredMethod("setAudFechaModificacion", parameters);
				Method methodUsuarioMod = clazz.getDeclaredMethod("setAudUsuarioModificacion", parametersString);
				methodFechaMod.invoke(this, new Date());
				methodUsuarioMod.invoke(this, getUsuarioConectado().getNombreUsuario());
				
			} catch (SecurityException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
	}
	
	
	
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		ActionErrors actionErrors = super.validate(mapping, request);
		if(actionErrors.size() > 0){
				request.getSession().setAttribute(ERRORS,actionErrors); 
		}
		return actionErrors;
	}
	public abstract boolean isFillAuditoria();
}
