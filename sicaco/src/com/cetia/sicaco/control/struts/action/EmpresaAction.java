/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cetia.sicaco.control.struts.action;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Transaction;

import com.cetia.sicaco.control.struts.form.EmpresaForm;
import com.cetia.sicaco.hibernate.CtrEmpEmpresaDAO;
import com.cetia.sicaco.struts.Constantes;
import com.cetia.sicaco.struts.DMLAction;

/** 
 * MyEclipse Struts
 * Creation date: 04-04-2008
 * 
 * XDoclet definition:
 * @struts.action path="/empresa" name="empresaForm" input="redirectInvalidData" parameter="accion" scope="request" validate="true"
 * @struts.action-forward name="lista" path="pagina-lista.control.empresa"
 */
public class EmpresaAction extends DMLAction {
	/*
	 * Generated Methods
	 */

	public static final String TABLA_ID = "ctrEmpEmpresa";
	private final static String CTRE_ID = "ctrEId";
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward lista(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		EmpresaForm empresaForm = (EmpresaForm)form;
		CtrEmpEmpresaDAO empresaDAO = new CtrEmpEmpresaDAO(getSessionHibernate(request));
		empresaForm.setEmpresaH(empresaDAO.findById(1));

		//----- Variables de configuracion
		request.setAttribute("form", empresaForm);
		request.setAttribute(Constantes.ACCION_KEY, "/empresa");
        request.setAttribute("filtro", "0");
		return mapping.findForward("lista");
		 
	}
	
	public ActionForward salvar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		EmpresaForm empresaForm = (EmpresaForm)form;
		CtrEmpEmpresaDAO empresaDAO = new CtrEmpEmpresaDAO(getSessionHibernate(request));
		Transaction tx = empresaDAO.getSession().beginTransaction();
		try {
			empresaDAO.merge(empresaForm.getEmpresaH());
			tx.commit();
		} catch (Exception e) {
			// TODO: handle exception
			tx.rollback();
			e.printStackTrace();
		}finally{
			empresaDAO.getSession().flush();
			empresaDAO.getSession().clear();
			
		}
		return lista(mapping,form,request,response);
	}
	
	public ActionForward editar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		EmpresaForm empresaForm = (EmpresaForm)form;
		CtrEmpEmpresaDAO empresaDAO = new CtrEmpEmpresaDAO(getSessionHibernate(request));
		empresaForm.setEmpresaH(empresaDAO.findById(empresaForm.getEmpId()));
		request.getSession().setAttribute(CTRE_ID, empresaForm.getEmpId());
		request.setAttribute("form", empresaForm);
		request.setAttribute(Constantes.ACCION_KEY, "/empresa");
        request.setAttribute("filtro", "1");
		return mapping.findForward("lista");
	}
	
		
	public ActionForward cancelar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		return lista(mapping, form, request, response);
	}
	
	public ActionForward redirectInvalidData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		ActionErrors errors = (ActionErrors)request.getSession().getAttribute(Constantes.ERRORS);
		EmpresaForm empresaForm = (EmpresaForm)form;
		CtrEmpEmpresaDAO empresaDAO = new CtrEmpEmpresaDAO(getSessionHibernate(request));
		empresaForm.setEmpresaH(empresaDAO.findById(1));
		request.getSession().setAttribute(CTRE_ID, empresaForm.getEmpId());
		request.setAttribute("form", empresaForm);
		request.setAttribute(Constantes.ACCION_KEY, "/empresa");
        request.setAttribute("filtro", "1");
		saveMessages(request, errors);
		return mapping.findForward("lista");
	}
	
	
	protected Map getKeyMethodMap() {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("cmd.empresa.lista", "lista");
		map.put("cmd.empresa.salvar", "salvar");
		map.put("cmd.empresa.actualizar", "editar");
		map.put("cmd.empresa.cancelar", "cancelar");
		map.put("cmd.empresa.redirectInvalidData","redirectInvalidData");
		return map;
	}
}