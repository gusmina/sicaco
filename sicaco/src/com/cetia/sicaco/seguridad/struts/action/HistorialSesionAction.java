/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cetia.sicaco.seguridad.struts.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Transaction;
import org.jmesa.facade.TableFacade;
import org.jmesa.facade.TableFacadeFactory;
import org.jmesa.facade.TableFacadeImpl;
import org.jmesa.limit.ExportType;
import org.jmesa.limit.Limit;
import org.jmesa.view.component.Column;
import org.jmesa.view.component.Row;
import org.jmesa.view.component.Table;
import org.jmesa.view.editor.DateCellEditor;

import com.cetia.sicaco.hibernate.SecHseHistorialSesion;
import com.cetia.sicaco.hibernate.SecHseHistorialSesionDAO;
import com.cetia.sicaco.seguridad.struts.form.HistorialSesionForm;
import com.cetia.sicaco.struts.Constantes;
import com.cetia.sicaco.struts.DMLAction;
/** 
 * MyEclipse Struts
 * Creation date: 02-20-2008
 * 
 * XDoclet definition:
 * @struts.action path="/historialSesion" name="historialSesionForm" input="pagina-lista.seguridad.historial" parameter="accion" scope="request" validate="true"
 * @struts.action-forward name="lista" path="pagina-lista.seguridad.historial"
 * @struts.action-forward name="error" path="pagina-lista.seguridad.historial"
 */
public class HistorialSesionAction extends DMLAction {
	/*
	 * Generated Methods
	 */

	public static final String TABLA_ID = "secHseHistorialSesion";
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	
	
	public ActionForward lista(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HistorialSesionForm historialSesionForm = (HistorialSesionForm) form;
		SecHseHistorialSesionDAO inicioSesionDAO = new SecHseHistorialSesionDAO(getSessionHibernate(request));
		List<SecHseHistorialSesion> lst = null;
		Transaction tx = inicioSesionDAO.getSession().beginTransaction();
		/*try {

			lst  = inicioSesionDAO.findAll();
			tx.commit();
		} catch (Exception e) {
			// TODO: handle exception
			tx.rollback();
			e.printStackTrace();
		}finally{
			inicioSesionDAO.getSession().flush();
			inicioSesionDAO.getSession().clear();
			inicioSesionDAO.getSession().close();
		}*/
		TableFacade tableFacade = TableFacadeFactory.createTableFacade(TABLA_ID ,request );
		tableFacade.setExportTypes(response, ExportType.CSV, ExportType.JEXCEL);
		tableFacade.setStateAttr("restore");
		Limit limit = tableFacade.getLimit();
		int totalRows = inicioSesionDAO.getTotalRowCount();
		tableFacade.setTotalRows(totalRows);
		int rowStart = limit.getRowSelect().getRowStart();
		int rowEnd = limit.getRowSelect().getRowEnd();
		lst = inicioSesionDAO.findAll(rowStart, rowEnd);
		tableFacade.setItems(lst);
		/*
		TableFacade tableFacade = new TableFacadeImpl(TABLA_ID, request);
		tableFacade.setItems(lst);
		//---- Genera los tipos de formas con que se podran exportar los datos
		tableFacade.setExportTypes(response, ExportType.CSV, ExportType.JEXCEL);
		tableFacade.setStateAttr("restore");
		Limit limit = tableFacade.getLimit();*/
		if (limit.isExported()) {
        	//---- exporta la tabla
            export(tableFacade,request);
            return null; 
        } else {
        	//---- genera el html de la tabla para ser mostrada
            String html = html(tableFacade, request);
            request.setAttribute(Constantes.LISTA_KEY, html);
        }
        //----- Variables de configuracion
		request.setAttribute(Constantes.ACCION_KEY, "/historialSesion");
        request.setAttribute("filtro", "1");
		return mapping.findForward("lista");
		 
	}
	
	//---- Funcion que genera el html de la tabla del jmesa
	private String html(final TableFacade tableFacade, final HttpServletRequest request) {
		tableFacade.setColumnProperties("secIseInicioSesion.iseNombreUsuario","hseIp","hseFechaAcceso","hseFechaSalida");
		Table table = tableFacade.getTable();
		//---- Titulo de la tabla
		table.setCaptionKey("tbl.historial.caption");
		
		Row row = table.getRow();
		Column nombreColumna = row.getColumn("hseFechaAcceso");
		nombreColumna.setTitleKey("tbl.historial.hseFechaAcceso");
		nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy HH:mm"));
		
		nombreColumna = row.getColumn("hseIp");
		nombreColumna.setTitleKey("tbl.historial.hseIp");
		
		nombreColumna = row.getColumn("secIseInicioSesion.iseNombreUsuario");
		nombreColumna.setTitleKey("tbl.sesion.iseNombreUsuario");
		
		nombreColumna = row.getColumn("hseFechaSalida");
		nombreColumna.setTitleKey("tbl.sesion.hseFechaSalida");
		nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy HH:mm"));
				
		return tableFacade.render();
	}
	
	//---- Funcion que genera los exports, el formato que tendran
	 private void export(final TableFacade tableFacade, final HttpServletRequest request) {
		 tableFacade.setColumnProperties("secIseInicioSesion.iseNombreUsuario","hseIp","hseFechaAcceso","hseFechaSalida");
			Table table = tableFacade.getTable();
			//---- Titulo de la tabla
			table.setCaptionKey("tbl.historial.caption.export");
			
			Row row = table.getRow();
			Column nombreColumna = row.getColumn("hseFechaAcceso");
			nombreColumna.setTitleKey("tbl.historial.hseFechaAcceso");
			nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy HH:mm"));
			
			nombreColumna = row.getColumn("hseIp");
			nombreColumna.setTitleKey("tbl.historial.hseIp");
			
			nombreColumna = row.getColumn("secIseInicioSesion.iseNombreUsuario");
			nombreColumna.setTitleKey("tbl.sesion.iseNombreUsuario");
			
			nombreColumna = row.getColumn("hseFechaSalida");
			nombreColumna.setTitleKey("tbl.sesion.hseFechaSalida");
			nombreColumna.getCellRenderer().setCellEditor(new DateCellEditor("dd-MMM-yyyy HH:mm"));
					
			tableFacade.render();
	}
	 
	public ActionForward buscar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		java.util.List lst = null;
		HistorialSesionForm historiSesionForm = (HistorialSesionForm)form;
		SecHseHistorialSesionDAO secHistorialSesionDAO = new SecHseHistorialSesionDAO(getSessionHibernate(request));
		Transaction tx = secHistorialSesionDAO.getSession().beginTransaction();
		try {

			lst =  secHistorialSesionDAO.findByCriteria(historiSesionForm.getHistorialSesionH());
			tx.commit();
		} catch (Exception e) {
			// TODO: handle exception
			tx.rollback();
			e.printStackTrace();
		}finally{
			secHistorialSesionDAO.getSession().flush();
			secHistorialSesionDAO.getSession().clear();
		}

		TableFacade tableFacade = new TableFacadeImpl(TABLA_ID, request);
		tableFacade.setItems((lst.size() == 0)?new ArrayList(0):lst);
		tableFacade.setExportTypes(response, ExportType.CSV, ExportType.JEXCEL);
		tableFacade.setStateAttr("restore");
		Limit limit = tableFacade.getLimit();
        if (limit.isExported()) {
        	//---- exporta la tabla
            export(tableFacade,request);
            return null; 
        } else {
        	//---- genera el html de la tabla para ser mostrada
            String html = html(tableFacade, request);
            request.setAttribute(Constantes.LISTA_KEY, html);
        }
        request.setAttribute("form",historiSesionForm);
        request.setAttribute(Constantes.ACCION_KEY, "/historialSesion");
        request.setAttribute("filtro", "1");
        return mapping.findForward("lista");
	}

	//---- Forward que hace render de una tabla que contiene la sesion con la lista de una busqueda
	
	public ActionForward eliminar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		//java.util.List lst = null;
		HistorialSesionForm historiSesionForm = (HistorialSesionForm)form;
		SecHseHistorialSesionDAO secHistorialSesionDAO = new SecHseHistorialSesionDAO(getSessionHibernate(request));
		Transaction tx = secHistorialSesionDAO.getSession().beginTransaction();
		try {

			secHistorialSesionDAO.deleteBy(historiSesionForm.getHistorialSesionH());
			tx.commit();
		} catch (Exception e) {
			// TODO: handle exception
			tx.rollback();
			e.printStackTrace();
		}finally{
			secHistorialSesionDAO.getSession().flush();
			secHistorialSesionDAO.getSession().clear();
		}

		return lista(mapping,form,request,response);
	}
	
	//---- Mapas usados para conectar las acciones
	protected Map<String, String> getKeyMethodMap() {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("cmd.historial.lista", "lista");
		map.put("cmd.historial.findByCriteria", "buscar");
		map.put("cmd.historial.eliminar", "eliminar");
		return map;
	}
}